书籍推荐：

1、数据结构
a) 严蔚敏 《数据结构与算法》
b) 《大话数据结构》

2、算法
a) 刘汝佳 《算法竞赛与入门经典》 （两本 + 习题）
b) 刘汝佳黑书 进阶 《算法艺术与信息学竞赛》

3、刷题网站
a) 力扣 seek6174
b) POJ or HDU

=============================================

算法特性：

1、五个特征
有穷性（无死循环，程序能运行完）、确定性（能得到结果）、可行性（可以解决问题）、有输入（问题解决）、有输出（问题解决）

2、设计原则
正确性（无bug）、可读性（代码易读，编码风格）、健壮性（少bug）

懂算法的人，代码很少有bug，且系统稳定 -- 学习目标

高效率 + 低存储，这个两个很重要*****

3、评价算法的两个重要指标：整个学习的半壁江山

a) 时间复杂度：运行一个程序花费的时间，O()

b) 空间复杂度：运行程序需要的内存，OOM

=============================================

时间复杂度：

1、时间复杂度计算的意义：

怎么测试接口的性能? 压测、冒烟、依赖测试环境、流程很长、

规模或者数据不准确，排序算法： 1 2 3 / 3 2 1，应该自己代码分析，也就是时间复杂度

2、时间复杂度的表示方法：大O表示法，O(n)、O(nlogn)、O(1)


O(1)、O(n)、O(nlogn)、O(n^2)、O(n+1)、O(n^2)、O(n!)

=============================================

时间复杂度分析：指的是某一段代码

计算时间复杂度，往往是计算比较大的，而且不确定的数，如果已经确定了，那么就不用计算了，也就是我们所说的常量

1、常数：O(1) 1表示常数，所有能确定的数字，我们都用O(1)，O(1000) -> O(1)

2、对数：O(logn)、O(nlogn)

3、线性：O(n)

4、线性对数：O(nlogn)

5、平方：O(n^2)

6、N次方：O(n^n)

怎么找时间复杂度：

a) 找有循环的地方

b) 找有网络请求(RPC，远程调用，分布式，数据库请求)的地方

就是测试时间：log打印，计算平均时间

=============================================

总结

时间复杂度：目的就是把代码写到最优，效率最高

O(1) > O(logn) > O(n) > O(nlogn) > O(n^2) > O(n^x)

O(1) > O(logn) > O(n) > O(nlogn) 效率很好，优化空间不大

优化的目标就是往O(1)的方向靠近

列表的接口：排序，冒泡排序： -> 找到更优秀的排序算法，快速排序、归并排序、堆排序

=============================================

空间复杂度：

1、分析的意义：找占内存的地方、数据

2、如何查找? 开辟空间的地方，数组、链表、缓存、递归

3、一般怎么改进?

=============================================

思考

1、什么是数据结构? 什么是算法?

a) 数据结构：能组合在一起的集合对象，比如：数组、链表、队列等

b) 算法：解决问题的

2、需要学习的内容

3、应该怎么学习


学习目的：

a) 提升能力的，全部学

b) 突击面试的，注意几个经典的，链表、排序算法、二叉树、红黑树、B-Tree、B+Tree

c) 进阶的：树论 + 图论 + 我的专项 + 每节课的理论部分





